{
 	message = {
 		notsaved = Template(f"templates/notsavedarticle.html");
 		saved = Template(f"templates/savedarticle.html");
 	};

 	storenew = DataWriter(f"queries/AddNewArticleBody.sql", connection = "agwiki") {
 		changed_0->message.notsaved;
		changed_1->message.saved;
 	};

 	storeupdate = DataWriter(f"queries/UpdateArticleBody.sql", connection = "agwiki") {
		changed_0->message.notsaved;
		changed_1->message.saved;
	};

 	updatearticle = DataReader(f"queries/GetCurrentArticleBodies.sql", connection = "agwiki") {
 		iterator->DataWriter(f"queries/ObsoleteArticleBody.sql", connection = "agwiki");
 		none->storenew;
 		last->storeupdate;
 	};

	instances = {
		bydata = DataReader(f"queries/GetArticle.sql", connection = "agwiki") {
			none->DataReader(f"queries/SetArticle.sql", connection = "agwiki") {
				single->updatearticle;
			};
			single->updatearticle;
		};

		bypost = BodyReader(
			escapehtml = false,
			field_title = "^.{1,512}$",
			field_summary = "^.{0,250}$",
			field_content = ".*", maperrors = true
		) {
			title_failure->Write("(1-512 characters)");
			summary_failure->Write("(0-250 characters)");
			content_failure->Write("(Any amount of characters)");
			form->Module(f"view.conf@begin") {
				view->Template(f"templates/editarticle.html") {
					codemirrorcss->Template(f"js/codemirror.css");
					codemirrorjs->Template(f"js/codemirror.js");
					appendform->Return("appendform");
				};
			};
			successful->Log("aa", variablenames = ["body"]) {
				continue->instances.bydata;
			};
		};

		byurl = QueryReader(
			field_url = "^[A-Z|a-z|0-9|_|-]{1,39}$"
		) {
			form->Template(f"templates/invalidurl.html");
			successful->DataReader(f"queries/GetArticle.sql", connection = "agwiki") {
				none-><f"../perm/ission.conf@check"> (
					resource = "wiki", action = "create"
				) {
					denied->Template(f"templates/accessdenied.html");
					granted->instances.bypost;
				};
				single-><f"../perm/ission.conf@checksub"> (
					resource = "wiki", action = "modify", 
					remap = { subresource = "url" }
				) {
					denied->Template(f"templates/accessdenied.html");
					granted->instances.bypost;
				};
			};
		};

		link = <f"../perm/ission.conf@checksub"> (
			resource = "wiki", action = "modify",
			remap = { subresource = "url" }
		) {
			denied->StubService(); 
			granted->Template(f"templates/aanpaslink.html");
		};
	};
}
